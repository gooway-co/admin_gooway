{"ast":null,"code":"import _asyncToGenerator from \"/Applications/admin_gooway/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth-api/auth-api.service\";\nexport class EventService {\n  constructor(http, _authService) {\n    this.http = http;\n    this._authService = _authService;\n    this.urlApi = environment.url_api;\n    this.local = this._authService.getInfoLocal();\n  }\n\n  handleError(err) {\n    let errorMessage;\n\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n\n    throw new Error(errorMessage);\n  }\n\n  create(event) {\n    var _this = this;\n\n    const URI = this.urlApi + 'events/create';\n    return this.http.post(URI, event).pipe(catchError( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (err) {\n        if (err.status == 401) {\n          _this._authService.logout();\n        }\n\n        _this.handleError(err);\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()));\n  }\n\n  update(id, event) {\n    var _this2 = this;\n\n    const URI = this.urlApi + `places/update/${id}`;\n    return this.http.put(URI, event).pipe(catchError( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (err) {\n        if (err.status == 401) {\n          _this2._authService.logout();\n        }\n\n        _this2.handleError(err);\n      });\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()));\n  }\n\n  delete(id) {\n    var _this3 = this;\n\n    const URI = this.urlApi + `events/delete/${id}`;\n    return this.http.delete(URI).pipe(catchError( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (err) {\n        if (err.status == 401) {\n          _this3._authService.logout();\n        }\n\n        _this3.handleError(err);\n      });\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()));\n  }\n\n  getById(id) {\n    var _this4 = this;\n\n    let companyId = this.local.companyId;\n    const URI = this.urlApi + `events/findById/${id}`;\n    let data = {\n      companyId: companyId\n    };\n    return this.http.post(URI, data).pipe(catchError( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(function* (err) {\n        if (err.status == 401) {\n          _this4._authService.logout();\n        }\n\n        _this4.handleError(err);\n      });\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()));\n  }\n\n  getEvents() {\n    var _this5 = this;\n\n    const URI = this.urlApi + `events/list`;\n    return this.http.get(URI).pipe(catchError( /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(function* (err) {\n        if (err.status == 401) {\n          _this5._authService.logout();\n        }\n\n        _this5.handleError(err);\n      });\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()));\n  }\n\n}\n\nEventService.ɵfac = function EventService_Factory(t) {\n  return new (t || EventService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthApiService));\n};\n\nEventService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventService,\n  factory: EventService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Applications/admin_gooway/src/app/infrastructure/services/event/events-api.service.ts"],"names":["catchError","environment","i0","i1","i2","EventService","constructor","http","_authService","urlApi","url_api","local","getInfoLocal","handleError","err","errorMessage","error","ErrorEvent","message","status","Error","create","event","URI","post","pipe","logout","update","id","put","delete","getById","companyId","data","getEvents","get","ɵfac","EventService_Factory","t","ɵɵinject","HttpClient","AuthApiService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth-api/auth-api.service\";\nexport class EventService {\n    constructor(http, _authService) {\n        this.http = http;\n        this._authService = _authService;\n        this.urlApi = environment.url_api;\n        this.local = this._authService.getInfoLocal();\n    }\n    handleError(err) {\n        let errorMessage;\n        if (err.error instanceof ErrorEvent) {\n            errorMessage = `An error occurred: ${err.error.message}`;\n        }\n        else {\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n        }\n        throw new Error(errorMessage);\n    }\n    create(event) {\n        const URI = this.urlApi + 'events/create';\n        return this.http.post(URI, event).pipe(catchError(async (err) => {\n            if (err.status == 401) {\n                this._authService.logout();\n            }\n            this.handleError(err);\n        }));\n    }\n    update(id, event) {\n        const URI = this.urlApi + `places/update/${id}`;\n        return this.http.put(URI, event).pipe(catchError(async (err) => {\n            if (err.status == 401) {\n                this._authService.logout();\n            }\n            this.handleError(err);\n        }));\n    }\n    delete(id) {\n        const URI = this.urlApi + `events/delete/${id}`;\n        return this.http.delete(URI).pipe(catchError(async (err) => {\n            if (err.status == 401) {\n                this._authService.logout();\n            }\n            this.handleError(err);\n        }));\n    }\n    getById(id) {\n        let companyId = this.local.companyId;\n        const URI = this.urlApi + `events/findById/${id}`;\n        let data = {\n            companyId: companyId,\n        };\n        return this.http.post(URI, data).pipe(catchError(async (err) => {\n            if (err.status == 401) {\n                this._authService.logout();\n            }\n            this.handleError(err);\n        }));\n    }\n    getEvents() {\n        const URI = this.urlApi + `events/list`;\n        return this.http.get(URI).pipe(catchError(async (err) => {\n            if (err.status == 401) {\n                this._authService.logout();\n            }\n            this.handleError(err);\n        }));\n    }\n}\nEventService.ɵfac = function EventService_Factory(t) { return new (t || EventService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthApiService)); };\nEventService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: EventService, factory: EventService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}