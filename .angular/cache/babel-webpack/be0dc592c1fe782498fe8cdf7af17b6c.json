{"ast":null,"code":"import _asyncToGenerator from \"/Applications/admin_gooway/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth-api/auth-api.service\";\nexport class PartnersService {\n  constructor(http, _authService) {\n    this.http = http;\n    this._authService = _authService;\n    this.urlApi = environment.url_api;\n    this.local = this._authService.getInfoLocal();\n  }\n\n  handleError(err) {\n    let errorMessage;\n\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n\n    throw new Error(errorMessage);\n  }\n\n  addPartners(Partners) {\n    var _this = this;\n\n    Partners.append('companyId', this.local.companyId);\n    const URI = this.urlApi + 'partners/create';\n    return this.http.post(URI, Partners).pipe(catchError( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (err) {\n        if (err.status == 401) {\n          _this._authService.logout();\n        }\n\n        _this.handleError(err);\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()));\n  }\n\n  updatePartners(id, Partners) {\n    var _this2 = this;\n\n    const URI = this.urlApi + `partners/update/${id}`;\n    return this.http.post(URI, Partners).pipe(catchError( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (err) {\n        if (err.status == 401) {\n          _this2._authService.logout();\n        }\n\n        _this2.handleError(err);\n      });\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()));\n  }\n\n  deletePartners(id) {\n    var _this3 = this;\n\n    const URI = this.urlApi + `partners/delete/${id}`;\n    return this.http.post(URI, {}).pipe(catchError( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (err) {\n        if (err.status == 401) {\n          _this3._authService.logout();\n        }\n\n        _this3.handleError(err);\n      });\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()));\n  }\n\n  getPartnersById(id) {\n    var _this4 = this;\n\n    let companyId = this.local.companyId;\n    const URI = this.urlApi + `partners/findById/${id}`;\n    let data = {\n      \"companyId\": companyId\n    };\n    return this.http.post(URI, data).pipe(catchError( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(function* (err) {\n        if (err.status == 401) {\n          _this4._authService.logout();\n        }\n\n        _this4.handleError(err);\n      });\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()));\n  }\n\n  getPartnersByCompany() {\n    var _this5 = this;\n\n    const URI = this.urlApi + `partners/listar`;\n    let companyId = this.local.companyId;\n    let data = {\n      \"companyId\": companyId\n    };\n    return this.http.post(URI, data).pipe(catchError( /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(function* (err) {\n        if (err.status == 401) {\n          _this5._authService.logout();\n        }\n\n        _this5.handleError(err);\n      });\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()));\n  }\n\n}\n\nPartnersService.ɵfac = function PartnersService_Factory(t) {\n  return new (t || PartnersService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthApiService));\n};\n\nPartnersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PartnersService,\n  factory: PartnersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Applications/admin_gooway/src/app/infrastructure/services/partners/partners-api.service.ts"],"names":["catchError","environment","i0","i1","i2","PartnersService","constructor","http","_authService","urlApi","url_api","local","getInfoLocal","handleError","err","errorMessage","error","ErrorEvent","message","status","Error","addPartners","Partners","append","companyId","URI","post","pipe","logout","updatePartners","id","deletePartners","getPartnersById","data","getPartnersByCompany","ɵfac","PartnersService_Factory","t","ɵɵinject","HttpClient","AuthApiService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth-api/auth-api.service\";\nexport class PartnersService {\n    constructor(http, _authService) {\n        this.http = http;\n        this._authService = _authService;\n        this.urlApi = environment.url_api;\n        this.local = this._authService.getInfoLocal();\n    }\n    handleError(err) {\n        let errorMessage;\n        if (err.error instanceof ErrorEvent) {\n            errorMessage = `An error occurred: ${err.error.message}`;\n        }\n        else {\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n        }\n        throw new Error(errorMessage);\n    }\n    addPartners(Partners) {\n        Partners.append('companyId', this.local.companyId);\n        const URI = this.urlApi + 'partners/create';\n        return this.http.post(URI, Partners).\n            pipe(catchError(async (err) => {\n            if (err.status == 401) {\n                this._authService.logout();\n            }\n            this.handleError(err);\n        }));\n    }\n    updatePartners(id, Partners) {\n        const URI = this.urlApi + `partners/update/${id}`;\n        return this.http.post(URI, Partners).\n            pipe(catchError(async (err) => {\n            if (err.status == 401) {\n                this._authService.logout();\n            }\n            this.handleError(err);\n        }));\n    }\n    deletePartners(id) {\n        const URI = this.urlApi + `partners/delete/${id}`;\n        return this.http.post(URI, {}).pipe(catchError(async (err) => {\n            if (err.status == 401) {\n                this._authService.logout();\n            }\n            this.handleError(err);\n        }));\n    }\n    getPartnersById(id) {\n        let companyId = this.local.companyId;\n        const URI = this.urlApi + `partners/findById/${id}`;\n        let data = {\n            \"companyId\": companyId\n        };\n        return this.http.post(URI, data).\n            pipe(catchError(async (err) => {\n            if (err.status == 401) {\n                this._authService.logout();\n            }\n            this.handleError(err);\n        }));\n    }\n    getPartnersByCompany() {\n        const URI = this.urlApi + `partners/listar`;\n        let companyId = this.local.companyId;\n        let data = {\n            \"companyId\": companyId\n        };\n        return this.http.post(URI, data).\n            pipe(catchError(async (err) => {\n            if (err.status == 401) {\n                this._authService.logout();\n            }\n            this.handleError(err);\n        }));\n    }\n}\nPartnersService.ɵfac = function PartnersService_Factory(t) { return new (t || PartnersService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthApiService)); };\nPartnersService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PartnersService, factory: PartnersService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}